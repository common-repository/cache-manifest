<?php
/*
Plugin Name: Cache Manifest
Plugin URI: http://wordpress.org/plugins/cache-manifest/
Version: 1.0
Description: View websites while you're offline.
Author: Grávuj Miklós Henrich
Author URI: http://henrich.ro
*/

// check WordPress version
global $wp_version;
if( version_compare( $wp_version, "3.1", "<" ) ) {
	exit(
		'This plugin requires php5 and WordPress 3.1 or newer. 
		<a href="http://codex.wordpress.org/Upgrading_WordPress" target="_blank">Please update!</a>'
	);
}

// manage <html> element
function add_cache_manifest_html( $output ) {
	$manifest_file = get_stylesheet_directory() .'/cache.manifest';
	if ( file_exists( $manifest_file ) ) {
		$ipad = strpos($_SERVER['HTTP_USER_AGENT'], 'iPad');
		$iphone = strpos($_SERVER['HTTP_USER_AGENT'], 'iPhone');
		$ipod = strpos($_SERVER['HTTP_USER_AGENT'], 'iPod');
		if ( $ipad || $iphone || $ipod ) {
			return $output . ' manifest="'. get_template_directory_uri() .'/cache.manifest"';
		}
		return $output . ' manifest="'. get_template_directory_uri() .'/cache.manifest"';
	}
}
add_filter( 'language_attributes', 'add_cache_manifest_html' );

// manage <head> enqueues
function manifest_head() {
	wp_enqueue_script('debugger_js', plugins_url('/debugger.js',__FILE__) );
}
//add_action( 'wp_head', 'manifest_head', 0 );

// manage footer enqueues
function manifest_footer(){
	$manifest_file = get_stylesheet_directory_uri() .'/manifest.html';
	if ( is_readable( get_stylesheet_directory() .'/manifest.html' ) ) {
		?>
        <div class="manifest" style="display:none;"></div>
		<script>
		if(!window.jQuery) {
			var script = document.createElement('script');
			script.type = "text/javascript";
			script.src = "http://ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.min.js";
			document.getElementsByTagName('head')[0].appendChild(script);
		}
        </script>
		<script type='text/javascript'>
		if (jQuery.browser.webkit) {
			jQuery(".manifest").replaceWith( "<iframe style='display:none' frameborder='0' height='0' src='<?php echo $manifest_file; ?>'></iframe>" );
		}
        </script>
		<?php
    }
}
add_action( 'wp_footer', 'manifest_footer' );

function _add_manifest_file(){
	// from www.sitesketch101.com/creating-a-dynamic-html5-cache-manifest/ 
	$hashes = "";
	$network = array("\n\nNETWORK:");
	$cache = array("\n\nCACHE:");
	$path = get_stylesheet_directory()."/";
	$dir = new RecursiveDirectoryIterator( $path );
	 
	foreach(new RecursiveIteratorIterator($dir) as $file) {
		if ($file->IsFile() && $file != "./manifest.php" && substr($file->getFilename(), 0, 1) != ".") {
			if(preg_match('/.php$/', $file)) {
				if (isAllowedExtension($file))
					array_push($network,"\n" . str_replace($path, './', $file));
			} else {
				if (isAllowedExtension($file))
					//array_push($cache,"\n" . str_replace($path, './', $file));
					$theme_name = get_current_theme();
					//$file = add_query_arg( 'ver', $GLOBALS['wp_version'], $file );
					array_push($cache,"\n" . str_replace($path, get_template_directory_uri().'/', $file));
			}
	
			$hashes .= md5_file($file);
		}
	}

	// Cache image
	$attachments = get_children( array(
		'post_parent' => get_the_ID(),
		'post_status' => 'inherit',
		'post_type' => 'attachment',
		'numberposts' => 50,
		'post_mime_type' => 'image') 
	);
	foreach ( $attachments as $attachment_id => $attachment ) {
		array_push($cache,"\n" . wp_get_attachment_url( $attachment_id ) );
	}
	
	// Cache content
	global $post;
	$args = array(
		'posts_per_page'	=> -1,
		'post_type'			=> array( 'post', 'page' ),
		'post_status'		=> 'publish'
	);
	$myposts = get_posts( $args );
	foreach( $myposts as $post ) :	setup_postdata($post);
		array_push($cache,"\n" . post_permalink($post->ID) );
	endforeach;
	
	// Cache homepage
	array_push($cache,"\n" . get_bloginfo('url') );
	
	$fh = fopen( get_stylesheet_directory().'/cache.manifest', 'w' );
	fwrite($fh,'CACHE MANIFEST');
 
	foreach($cache as $file){ fwrite($fh,$file); }
	foreach($network as $file){ fwrite($fh,$file);}
	fwrite($fh,"\nhSpecific Entry");
	fwrite($fh, "\n\n# Hash:" . md5($hashes)); 
	fwrite($fh, "\n\n# Generated by Cache Manifest plugin"); 
	fclose($fh);

	$manifest_file = get_stylesheet_directory() .'/manifest.html';

	if ( !file_exists($manifest_file) ) {
			$fh = fopen( get_stylesheet_directory().'/manifest.html', 'w' );
			fwrite($fh, "<!DOCTYPE html>\n");
			fwrite($fh, "<html manifest=\"cache.manifest\">\n");
			fwrite($fh, "<head><meta charset=\"utf-8\" /><title>cache</title></head>\n");
			fwrite($fh, "<body>Generated by Cache Manifest plugin</body>\n");
			fwrite($fh, "</html>\n");
			fclose($fh);
	}
}

function isAllowedExtension($file) {
	$allowedExtensions = array("php", "gif", "png", "jpg", "js", "css");
	//$ignore = array("error_log","html", ".dev.", "screenshot", ".txt", "psd", "psd", "manifest", "_.", "!");
	return in_array(end(explode(".", $file)), $allowedExtensions);
}

function remove_manifest_file(){
	$files = array( get_stylesheet_directory() .'/manifest.html', get_stylesheet_directory().'/cache.manifest' );
	foreach( $files as $file ) {
		if( file_exists( $file ) )
		unlink( $file );
	}
}

add_action( 'save_post', '_add_manifest_file' );
add_action( 'switch_theme', '_add_manifest_file' );

register_activation_hook( __FILE__, '_add_manifest_file' );

register_deactivation_hook( __FILE__, 'remove_manifest_file' );
?>